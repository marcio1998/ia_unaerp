# -*- coding: utf-8 -*-
"""perceptron_xor_logistic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w46nJscR0cxTuMt41LFel0kdnC9Qr39E
"""

import numpy as np
i1 = [0,0,1,1]
i2 = [0,1,0,1]
weight_1 = 5
weight_2 = 6
weight_3 = 9
weight_4 = 3
weight_5 = 4
weight_6 = 2
t1 = 10
t2 = 2
t3 = 1
def trash_hold(sum,t):
  soma = 1/(1+np.exp(-10*(sum-t)))
  #print(soma)
  return soma
def trash_hold_2(sum,t):
  soma = 1/(1+np.exp(+10*(sum-t)))
  print(soma)
  return soma
sum1 = []
sum2 = []
sum3 = []
O1 = [] 
O2 = []
O3 = []

for x in range(len(i1)):
  sum1.append(i1[x]*weight_1 + i2[x]*weight_2)
  O1.append(round(trash_hold(sum1[x],t1)))
#print(sum1)
print(O1)

import pandas as pd
df = pd.DataFrame(columns = ['i1', 'i2', 'Sum1', 'O1'])
df['i1'] = i1
df['i2'] = i2
df['Sum1'] = sum1
df['O1'] = O1
df

for x in range(len(i1)):
  sum2.append(i1[x]*weight_3 + i2[x]*weight_4)
  O2.append(round(trash_hold_2(sum2[x],t2)))
print(sum2)
print(O2)

df['Sum2'] = sum2
df['O2'] = O2
df

for x in range(len(i1)):
  sum3.append(O1[x]*weight_5 + O2[x]*weight_6)
  O3.append(round(trash_hold_2(sum3[x],t3)))
print(sum3)
print(O3)

df['Sum3'] = sum3
df['O3'] = O3
df

import matplotlib.pyplot as plt
import seaborn as sns
sns.set()
plt.scatter(sum3,O3)
plt.plot(sum3,O3,c = 'orange', lw = 3)
plt.xlabel('Sum')
plt.ylabel('f(sum)')
plt.title('Percpetron XOR')
plt.show()